Skillset1

Section 1：创建可插拔数据库

1.使用下面的描述，在 PRODCDB 中创建 12c 可插拔数据库 PDBPROD3：
 （1）通过拷贝PDBPROD1的方法，创建可插拔数据库PDBPROD3
     
     doc：Administrator's Guide --> 38 Creating and Removing PDBs with SQL*Plus --> Creating a PDB by Cloning an Existing PDB or Non-CDB
     
     SQL> alter pluggable database all open;
     
     Pluggable database altered.
     
     SQL> CREATE PLUGGABLE DATABASE pdbprod3 FROM pdbprod1
     FILE_NAME_CONVERT = ('PDBPROD1', 'PDBPROD3');  
     
     Pluggable database created.
     
 （2）确保PRODCDB在任何时间重启后，PDBPROD3自动打开到相同的模式
 
     SQL> alter pluggable database pdbprod3 open;
     
     Pluggable database altered.
     
     SQL> alter pluggable database pdbprod3 save state;
     
     Pluggable database altered.
     
  SQL> select * from dba_pdb_saved_states;

    CON_ID
----------
CON_NAME
--------------------------------------------------------------------------------
INSTANCE_NAME
--------------------------------------------------------------------------------
   CON_UID GUID 			    STATE	   RES
---------- -------------------------------- -------------- ---
	 5
PDBPROD3
PRODCDB
 317534817 26F3AA561C580C68E053650200C07009 OPEN	   NO




2.使用下面的描述，在 PRODCDB 中创建可插拔数据库 PDBPROD4 和 PDBPROD5：
 （1）将 DB11G 非多租户数据库中所有应用的schemas（HR，OE，SH）导入到 PRODCDB 容器数据库的 PDBPROD4 可插拔数据库中。导入完成后，确保DB11G数据库依旧可用。
     doc:Administrator's Guide --> 15 Transporting Data --> Scenarios for Full Transportable Export/import --> Transporting a Database Using an Export Dump File

     SQL> CREATE PLUGGABLE DATABASE pdbprod4 ADMIN USER pdbadmin IDENTIFIED BY oracle
          FILE_NAME_CONVERT = ('pdbseed','PDBPROD4');

     SQL> alter tablespace users read only;

     Tablespace altered.

     SQL> alter tablespace example read only;

     Tablespace altered.

     使用11g客户端导出
     expdp \'/ as sysdba\' dumpfile=11g.dmp logfile=11g.log schemas=hr,oe,sh

     expdp \'/ as sysdba\' full=y dumpfile=expdat.dmp directory=data_pump_dir transportable=always logfile=expdat.log version=12
     
     exp \'/ as sysdba\' file=11g.dmp log=11g.log owner=hr,sh,oe statistics=none;
     
     使用12c客户端导入
     创建表空间
     impdp \'sys/oracle@host01:1521/pdbprod4.example.com as sysdba\' directory=dir_dump dumpfile=11g.dmp logfile=11g.log 

     
     impdp \'sys/oracle@pdbprod4 as sysdba\' full=Y dumpfile=expdat.dmp directory=dump_dir transport_datafiles='/u01/app/oracle/oradata/PRODCDB/PDBPROD4/users01.dbf','/u01/app/oracle/oradata/PRODCDB/PDBPROD4/example01.dbf' logfile=import.log version=12

     需要创建用户，imp \'sys/oracle@host01:1521/pdbprod4.example.com as sysdba\' file=11g.dmp log=11gimp.log fromuser=hr,oe,sh touser=hr,oe,sh


 （2）创建 PROD4 非多租户数据库的副本作为PRODCDB 容器数据库的 PDBPROD5可插拔数据库。 
     在PRODCDB中创建dblink
    
     首先PROD4必须要启动到open read only，
     否则执行noncdb_to_pdb会报错
     
     SQL> create public database link prod4 connect to system identified by oracle using 'PROD4';

     Database link created.

     SQL> CREATE PLUGGABLE DATABASE pdbprod5 FROM NON$CDB@prod4
          FILE_NAME_CONVERT = ('PROD4','PRODCDB/PDBPROD5');
          
      alter session set contanier＝pdbprod5
          

     SQL> alter session set container=pdbprod5;

     Session altered.

     SQL> @?/rdbms/admin/noncdb_to_pdb
     
     SQL> alter pluggable database pdbprod5 open;


   
    
   
3.创建下列用户：
 （1）使用下面的描述创建USER1用户：
      在PDBPROD1，PDBPROD2，PDBPROD3，PDBPROD4，PDBPROD5中USER1应该有相同的标识。
      在PRODCDB中的以后创建的PDB中，USER1也应该有相同的标识。
    
      SQL> alter system set common_user_prefix='' scope=spfile;
      
      SQL> create user user1 identified by oracle;
      SQL> col username for a10
      SQL> set pages 200
      SQL> select username,common,con_id from cdb_users where username like 'USER1%';

 （2）创建仅在PDBPROD1中有定义的USER2用户
     SQL> alter session set container=pdbprod1;

     Session altered.

     SQL> show con_name

     CON_NAME
     ------------------------------
     PDBPROD1
     
     SQL> create user user2 identified by oracle;
     
     User created.
     
     SQL> select username,common,con_id from cdb_users where username like 'USER%';
     
     USERNAME   COM	CON_ID
     ---------- --- ----------
     USER2	    NO	3
     USER1	    YES	3
     
  
4.创建下面的角色：
 （1）使用下面的描述创建一个角色，名字叫ROLE1：
     应该可以授权给PRODCDB容器数据库中所有PDB的用户
     ROLE1也应该存在于以后创建的PDB中
        
     SQL> alter session set container=cdb$root;
     
     Session altered.
     
     SQL> create role role1;                    
     
     Role created.
     
     SQL> col role for a20
     SQL> select role,common,con_id from cdb_roles where role like 'ROLE%';
     
     
     ROLE		     COM     CON_ID
     -------------------- --- ----------
     ROLE1		     YES	  1
     ROLE1		     YES	  5
     ROLE1		     YES	  4
     ROLE1		     YES	  6
     ROLE1		     YES	  3
     
        
 （2）创建一个角色名字是ROLE2，仅仅可以被授权给PRODCDB中的PDBPROD1
     SQL> alter session set container=pdbprod1;
     
     Session altered.
     
     SQL> create role role2;
     
     Role created.
     
     SQL> select role,common,con_id from cdb_roles where role like 'ROLE%';
     
     ROLE		     COM     CON_ID
     -------------------- --- ----------
     ROLE1		     YES	  3
     ROLE2		     NO 	  3
     
5.使用下列描述，授予权限和角色给用户和角色：
 （1）给USER1用户授予可以连接所有当前和未来容器数据库的权限。不要授予其他权限
     SQL> grant create session to user1 container=all;
     
     Grant succeeded.
     
     SQL> select * from cdb_sys_privs where grantee like 'USER%';
     
     GRANTEE    PRIVILEGE				    ADM COM	CON_ID
     ---------- ---------------------------------------- --- --- ----------
     USER1	   CREATE SESSION			    NO	YES	     1
     USER1	   CREATE SESSION			    NO	YES	     5
     USER1	   CREATE SESSION			    NO	YES	     4
     USER1	   CREATE SESSION			    NO	YES	     3
     USER1	   CREATE SESSION			    NO	YES	     6

   
（2）给USER2用户授予仅仅可以连接PDBPROD1容器数据库的权限。不要授予其他权限
   
   SQL> grant create session to user2;
   
   Grant succeeded.
   
   SQL> select * from cdb_sys_privs where grantee like 'USER%';
   
   GRANTEE    PRIVILEGE				    ADM COM	CON_ID
   ---------- ---------------------------------------- --- --- ----------
   USER2	   CREATE SESSION			    NO	NO	     3
   USER1	   CREATE SESSION			    NO	YES	     3
   
（3）给ROLE1角色授予创建存储过程的权限，让该权限可以被授予给PRODCDB中所有的PDB。
   SQL> grant create procedure to role1 container=all;
   
   Grant succeeded.
   
   SQL> select * from role_sys_privs where role like 'ROLE%';
   
   ROLE		     PRIVILEGE				      ADM COM
   -------------------- ---------------------------------------- --- ---
   ROLE1		     CREATE PROCEDURE			      NO  YES
   

  
  
Section 2：配置OEM Express   

1.为PRODCDB配置OEM Express，使用http协议，端口为5501
  
  doc:Administrator's Guide -->  37 Creating and Configuring a CDB --》Configuring EM Express for a CDBSQL> exec 
      
  SQL> exec DBMS_XDB_CONFIG.SETHTTPPORT(5501);
  
  PL/SQL procedure successfully completed.
  
  访问地址：http://host01.example.com:5501/em/
    
    
    
Section 3：服务器端和客户端网络配置

1.配置PDBPROD1，PDBPROD2，PDBPROD3，PDBPROD4，PDBPROD5，EMREP的别名，使用默认监听器，1521端口



Section 4： 配置容器数据库

1.配置PRODCDB容器数据库，诊断信息存储在/u01/app/oracle/product/12.1.0/dbhome_1
SQL> alter system set diagnostic_dest='/u01/app/oracle/product/12.1.0/dbhome_1';

System altered.


2.在PRODCDB容器数据库中，配置在全局临时表上执行DML操作时最小化Redo的产生。
SQL> alter system set temp_undo_enabled=true;

System altered.


3.在PDBPROD2中，创建永久表空间来存储样例数据。使用下面的描述：
  表空间名称：BIG_TBS
  初始文件大小为500m，可以扩展到1TB
  
  SQL> create bigfile tablespace big_tbs 
  datafile '/u01/app/oracle/oradata/PRODCDB/PDBPROD2/big_tbs.dbf' size 500m autoextend on maxsize 1T
  extent management local;       

  Tablespace created.

  

Section 5： 数据库备份和可用性

1.为PRODCDB容器数据库创建控制文件第三个副本，放在$ORACLE_HOME/dbs/ 目录中
SQL> alter system set control_files='/u01/app/oracle/oradata/PRODCDB/control01.ctl','/u01/app/oracle/fast_recovery_area/PRODCDB/control02.ctl','/u01/app/oracle/oradata/PRODCDB/control03.ctl' scope=spfile;

System altered.

SQL> shu immediate
Database closed.
Database dismounted.
ORACLE instance shut down.
SQL> !cp /u01/app/oracle/oradata/PRODCDB/control01.ctl /u01/app/oracle/oradata/PRODCDB/control03.ctl

SQL> startup
ORACLE instance started.

Total System Global Area  838860800 bytes
Fixed Size		    2929936 bytes
Variable Size		  570428144 bytes
Database Buffers	  260046848 bytes
Redo Buffers		    5455872 bytes
Database mounted.
Database opened.


2.连接EMREP数据库，以访问Catalog数据库。catalog owner是rc_admin，口令为RC_ADMIN
  确保catalog可以兼容12c的Rman客户端
  注册PRODCDB和PROD4，PROD5到catalog中
  
  
3.备份PRODCDB容器数据库和所有可插拔数据库
  RMAN> backup as compressed backupset database plus archivelog;


4.备份PDBPROD1中的SYSAUX表空间，并可保留很长时间。串行备份性能有问题，请解决，每个备份片100m
backup keep forever format '/u01/app/oracle/oradata/pdbprod1_sysaux%U.bkp' section size 100m tablespace pdbprod1:sysaux；


Section 6： 启用闪回数据库

1.为PROD4启用闪回数据库,快速恢复区必须在/u01/app/oracle/flash,大小为5GB

SQL> alter system set db_recovery_file_dest_size=5120M;

System altered.

SQL> !mkdir -p /u01/app/oracle/flash

SQL> alter system set db_recovery_file_dest='/u01/app/oracle/flash';

System altered.

SQL> alter database flashback on;

Database altered.



2.创建restore point为DBRSP1，这个还原点在控制文件中永不过期

  doc: Backup and Recovery User's Guide --> 7 Using Flashback Database and Restore Points

  SQL> CREATE RESTORE POINT DBRSP1 GUARANTEE FLASHBACK DATABASE;

  Restore point created.

3.PDBPROD1中的HR用户下的EMP_DEPT1表被删除了多次，恢复包含DEPARTMENT_NAME列的版本，并把恢复后的表命名为DEPT_EMP1.

初始化环境：

create user hr identified by hr;
grant connect,resource,unlimited tablespace to hr;
CREATE TABLE HR.EMP_DEPT1
(
  DEPARTMENT_ID    NUMBER(4),
  DEPARTMENT_NAME  VARCHAR2(30)  NOT NULL,
  MANAGER_ID       NUMBER(6),
  LOCATION_ID      NUMBER(4)
);

purge recyclebin;
DROP TABLE HR.EMP_DEPT1 CASCADE CONSTRAINTS;
CREATE TABLE HR.EMP_DEPT1
(
  DEPARTMENT_ID1    NUMBER(4),
  MANAGER_ID       NUMBER(6),
  LOCATION_ID      NUMBER(4)
);
DROP TABLE HR.EMP_DEPT1;
CREATE TABLE HR.EMP_DEPT1
(
  DEPARTMENT_ID1    NUMBER(4),
  MANAGER_ID       NUMBER(6),
  LOCATION_ID      NUMBER(4)
);
DROP TABLE HR.EMP_DEPT1;

CREATE TABLE HR.EMP_DEPT1
(
  DEPARTMENT_ID1    NUMBER(4),
  MANAGER_ID       NUMBER(6),
  LOCATION_ID      NUMBER(4)
);


SQL> show recyclebin;
ORIGINAL NAME	 RECYCLEBIN NAME		OBJECT TYPE  DROP TIME
---------------- ------------------------------ ------------ -------------------
EMP_DEPT1	 BIN$IxkX3iwhZQfgU2UCAMB7lQ==$0 TABLE	     2015-10-27:23:55:43
EMP_DEPT1	 BIN$IxkX3iwgZQfgU2UCAMB7lQ==$0 TABLE	     2015-10-27:23:55:23

SQL> desc "BIN$IxkX3iwgZQfgU2UCAMB7lQ==$0"
 Name					   Null?    Type
 ----------------------------------------- -------- ----------------------------
 DEPARTMENT_ID					    NUMBER(4)
 DEPARTMENT_NAME			   NOT NULL VARCHAR2(30)
 MANAGER_ID					    NUMBER(6)
 LOCATION_ID					    NUMBER(4)


SQL> flashback table "BIN$IxkX3iwgZQfgU2UCAMB7lQ==$0" to before drop rename to dept_emp1;

Flashback complete.


select object_name,original_name,type from user_recyclebin;
